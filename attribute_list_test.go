/*
 * Copyright (c) 2019 Alec Randazzo
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */

package GoFor_MFT_Parser

import (
	"encoding/hex"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestMasterFileTableRecord_getAttributeList(t *testing.T) {
	mftBytes, _ := hex.DecodeString

	tests := []struct {
		name          string
		mftRecord     *masterFileTableRecord
		wantMftRecord *masterFileTableRecord
	}{
		{
			name: "Test1",
			mftRecord: &masterFileTableRecord{
				MftRecordBytes: mftBytes,
				RecordHeader: recordHeader{
					AttributesOffset: 0x38,
				},
				AttributeInfo: []AttributeInfo{},
			},
			wantMftRecord: &masterFileTableRecord{
				AttributeInfo: []AttributeInfo{
					{
						AttributeType:  16,
						AttributeBytes: []byte{16, 0, 0, 0, 96, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 72, 0, 0, 0, 24, 0, 0, 0, 234, 36, 205, 74, 116, 212, 209, 1, 234, 36, 205, 74, 116, 212, 209, 1, 234, 36, 205, 74, 116, 212, 209, 1, 234, 36, 205, 74, 116, 212, 209, 1, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			_ = tt.mftRecord.GetAttributeList()
			assert.Equal(t, tt.wantMftRecord.AttributeInfo[0], tt.mftRecord.AttributeInfo[0], "The attribute info should be equal.")
		})
	}
}
